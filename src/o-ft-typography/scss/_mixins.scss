@mixin _oFtTypographyFont($family, $weight:normal, $style:normal) {
  font-family: oFontsGetFontFamilyWithFallbacks($family);
  font-weight: $weight;
  font-style: $style;
}

@mixin oFtTypographyFontOffset($offset) {
  @if ($offset > 0) {
    padding-top: $offset + px;
    margin-bottom: -$offset + px;
  } @else if ($offset < 0) {
    margin-top: $offset + px;
    padding-bottom: -$offset + px;
  }
}

@mixin oFtTypographyFontSize($size, $lineHeight: null, $offset: 0) {
	font-size: $size + px;
	// In some version of webkit there was some bug (unfortunately neglected to document at the time)
	// with using unitless line-height, hence removal of this line
	// line-height: $originalLineHeight / $originalHeight;
	@if ($lineHeight) {
		line-height: $lineHeight + px;
	}
	@include oFtTypographyFontOffset($offset);
}

@mixin oFtTypographyFauxTextBackground($color) {
  text-shadow: 4px 0 2px $color, -4px 0 2px $color,
  0 4px 2px $color, 0 -4px 2px $color,
  2px 0 4px $color, -2px 0 4px $color,
  0 2px 4px $color, 0 -2px 4px $color,
  6px 0 1px $color;
}


@mixin oFtTypographyExtend ($class) {
	@extend #{'%o-ft-typography-#{$class}'} !optional;
}

/**
  Wrap styles in module-name prefixed SASS placeholders and CSS classes (if not in silent mode),
  and optionally CSS selectors (if not in silent mode)
  $names:         SASS list of placeholder/class names in the format "name1 name2" but without the quotes.
                  Will automatically by prefixed with module name.
  $cssSelectors:  [optional] string. CSS selectors which should also receive the same styles.
                  Does not get auto-prefixed, so must be exactly as you want output on the CSS.
*/
@mixin oFtTypographySelectors($names, $cssSelectors: ()) {
  $selectors: ();
  $selectors: append($selectors, oFtGetPrefixedPlaceholders($names));
  @if (not $o-ft-typography-is-silent) {
    $selectors: append($selectors, oFtGetPrefixedClasses($names));
    $selectors: append($selectors, unquote($cssSelectors), comma);
  }
  #{$selectors} {
    @content;
  }
}

/** 
 Provides a typography focused interface for oFontsInclude()
**/
@mixin oFtTypographyIncludeFont ($type) {
  @each $usecase in $_o-ft-typography-fontface-usecase-mapping {
    @if ($type == nth($usecase, 1)) {
      @include oFontsInclude(nth($usecase, 2), nth($usecase, 3));
    }
  }
}

@mixin _oFtTypographyLinkStyle($color, $hover-color) {
  a {
    text-decoration: none;
    color: $color;
    cursor: pointer;
    #{$o-hoverable-if-hover-enabled} &:hover {
      color: $hover-color;
    }
  }
}